openapi: 3.0.1
info:
  title: Personal Budget API
  version: 1.0.0
  description: An API for the Personal Budget App
paths:
  /api/envelopes:
    summary: Data for all of the personal budget categories/envelopes
    description: This path is used to get or create data for personal budget categories
    post:
      summary: Create new envelope
      description: Add a new envelope/category to the database
      operationId: create_envelope
      requestBody:
        description: A new envelope object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Envelope'
      responses:
        '201':
          content:
            application/json:
              examples:
                new envelope:
                  value: |2-
                     {"message": "Envelope added with ID: 1",
                      "data":[{
                      "id": 1,
                      "name": "Travel",
                      "amount": "$200.00",
                      "budget_id": 1}]
                     }  
          description: Envelope created
        '400':
          content:
            application/json:
              examples:
                Checks total budget constraint:
                  value: '{ message: ''You went over budget, consider another amount'' }'
                Request fields check:
                  value: '{message: ''Add name and amount of the envelope''}'
          description: >-
            Total budget constraint error or missing information in the request
            body
        '500':
          content:
            application/json:
              examples:
                Error:
                  value: '{ error: ''An error occurred while creating envelope'' }'
          description: An error occured
      tags:
        - Envelopes
    get:
      summary: Get all envelopes
      description: Retrieve the envelope information from the database
      operationId: get_envelopes
      responses:
        '200':
          content:
            application/json:
              examples:
                Success:
                  value: |-
                    [
                        {
                            "id": 1,
                            "name": "Travel",
                            "amount": "$205.00",
                            "budget_id": 1
                        },
                        {
                            "id": 2,
                            "name": "Shopping",
                            "amount": "$200.00",
                            "budget_id": 1
                        },
                        {
                            "id": 16,
                            "name": "Groceries",
                            "amount": "$200.00",
                            "budget_id": 1
                        },
                        {
                            "id": 17,
                            "name": "Other",
                            "amount": "$200.00",
                            "budget_id": 1
                        },
                        {
                            "id": 18,
                            "name": "Rent",
                            "amount": "$200.00",
                            "budget_id": 1
                        },
                        {
                            "id": 22,
                            "name": "Medical",
                            "amount": "$100.00",
                            "budget_id": 1
                        }
                    ]
          description: Success
        '500':
          content:
            application/json:
              examples:
                Error:
                  value: '{ error: ''An error occurred while fetching envelopes'' }'
          description: Handles errors
      tags:
        - Envelopes
  /api/envelopes/{envelopeId}:
    summary: Data for a single category/envelope
    description: Manipulate category by id
    get:
      summary: Get a single envelope
      description: >-
        Retrieve the information about a single category from the database by
        envelope id
      operationId: get_envelope
      parameters:
        - name: envelopeId
          in: path
          description: The id of the envelope.
          required: true
          schema:
            type: integer
      responses:
        '200':
          content:
            application/json:
              examples:
                Success:
                  value: |-
                    {"id": 1,
                      "name": "Travel",
                      "amount": "$200.00",
                      "budget_id": 1
                     }
          description: Success
        '400':
          content:
            application/json:
              examples:
                Envelope ID not provided:
                  value: '{ error: ''Envelope ID is required'' }'
          description: Throws an error if envelope ID is not provided
        '404':
          content:
            application/json:
              examples:
                Envelope does not exist:
                  value: '{message: `Envelope with ID ${id} does not exist`}'
          description: Throws an error if envelope does not exist
        '500':
          content:
            application/json:
              examples:
                Error Handler:
                  value: '{ error: ''An error occurred while fetching envelope'' }'
          description: Throws an error if something goes wrong
      tags:
        - Envelopes
    put:
      summary: Update envelope
      description: Update envelope by id
      operationId: update_envelope
      parameters:
        - name: envelopeId
          in: path
          description: The id of the envelope.
          required: true
          schema:
            type: integer
      requestBody:
        description: An updated envelope object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Envelope'
      responses:
        '200':
          content:
            application/json:
              examples:
                Updated:
                  value: '{"message": "Envelope modified with ID: 1"}'
          description: Category was updated successfully
        '400':
          content:
            application/json:
              examples:
                Budget check:
                  value: '{ message: ''You went over budget, consider another amount'' }'
                Missing data:
                  value: '{ error: ''More data required'' }'
          description: >-
            Throws an error if envelope ID, category name, category amount or
            budget ID was not provided or if the amount is over the budget
        '500':
          content:
            application/json:
              examples:
                Error Handler:
                  value: '{error: ''An error occurred while updating envelope''}'
          description: Throws an error if something went wrong
      tags:
        - Envelopes
    delete:
      summary: Delete an envelope
      description: Deletes an envelope with a matching id from the database
      operationId: delete_envelope
      parameters:
        - name: envelopeId
          in: path
          description: The id of the envelope.
          required: true
          schema:
            type: integer
      responses:
        '200':
          content:
            application/json:
              examples:
                Success:
                  value: '{"message": "Envelope deleted with ID: 1"}'
          description: Success
        '400':
          content:
            application/json:
              examples:
                Check if there are transactions associated with the category:
                  value: >-
                    { message: 'You have transactions associated with this
                    envelope' }
          description: >-
            Throws an error if there are yransactions associated with the
            category
        '500':
          content:
            application/json:
              examples:
                Error Handler:
                  value: '{error: ''An error occurred while deleting transaction'' }'
          description: Throws an error if something went wrong
      tags:
        - Envelopes
  /api/budget:
    summary: Operations with budgets
    description: This path is used to access and create budgets
    post:
      summary: Create budget
      description: Add budget amount to the database
      operationId: create_budget
      requestBody:
        description: A new budget object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Budget'
      responses:
        '201':
          content:
            application/json:
              examples:
                Success:
                  value: '{message:''Budget added with ID: 1, $10 000''}'
          description: Budget was added successfully
        '400':
          content:
            application/json:
              examples:
                More data is needed:
                  value: '{message: "Please add your budget amount"}'
          description: Budget amount was not provided
        '500':
          content:
            application/json:
              examples:
                Error Handler:
                  value: '{ error: ''An error occurred while creating budget'' }'
          description: Something went wrong
      tags:
        - Budget
  /api/budget/{budgetId}:
    summary: To access total budget
    description: Refers to a total budget of a single user
    get:
      summary: Get a total budget
      description: Get a total budget for a single user
      operationId: get_budget_by_id
      parameters:
        - name: budgetId
          in: path
          description: The id of the budget.
          required: true
          schema:
            type: integer
      responses:
        '200':
          content:
            application/json:
              examples:
                Gets user's budget:
                  value: |-
                    {
                      "id": 1,
                      "amount": "$10 000.00"
                    }
          description: Success response
        '400':
          content:
            application/json:
              examples:
                Missing budget ID:
                  value: '{ error: ''Budget ID is required'' }'
          description: Error response if budget ID was not provided
        '404':
          content:
            application/json:
              examples:
                Budget not found:
                  value: '{message: `Budget with ID 1 does not exist`}'
          description: Error response if budget was not found
        '500':
          content:
            application/json:
              examples:
                Error Handler:
                  value: '{ error: ''An error occurred while fetching budget'' }'
          description: Error response
      tags:
        - Budget
    put:
      summary: Update budget
      description: Update total budget amount in the database
      operationId: update_budget
      parameters:
        - name: budgetId
          in: path
          description: The id of the budget.
          required: true
          schema:
            type: integer
      requestBody:
        description: A new budget object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Budget'
      responses:
        '200':
          content:
            application/json:
              examples:
                Success:
                  value: |-
                    {
                      "message": "Budget modified with ID: 52",
                      "data": {
                          "id": 52,
                          "amount": "$10.00"
                      }
                    }
          description: Success response
        '400':
          content:
            application/json:
              examples:
                Budget ID or amount is missing:
                  value: '{ error: ''More data required'' }'
          description: Error response if budget ID or amount was not provided
        '500':
          content:
            application/json:
              examples:
                Error Handler:
                  value: '{error: ''An error occurred while updating budget''}'
          description: Error response
      tags:
        - Budget
    delete:
      summary: Delete a budget
      description: Delete a budget by id
      operationId: delete_budget
      parameters:
        - name: budgetId
          in: path
          description: The id of the budget.
          required: true
          schema:
            type: integer
      responses:
        '200':
          content:
            application/json:
              examples:
                Deleted successfully:
                  value: '{message: `Budget deleted with ID: 1`}'
          description: Deleted successfully
        '400':
          content:
            application/json:
              examples:
                Can not delete budget if there are envelopes associated with it:
                  value: >-
                    { message: 'You have envelopes associated with this budget'
                    }
          description: Can not delete budget if there are envelopes associated with it
        '404':
          content:
            application/json:
              examples:
                Budget not found:
                  value: '{message: `Budget with ID 1 does not exist`}'
          description: Budget not found
        '500':
          content:
            application/json:
              examples:
                Error Handler:
                  value: '{error: ''An error occurred while deleting budget'' }'
          description: Error response
      tags:
        - Budget
  /api/envelopes/{envelopeId}/transactions:
    summary: Operations with transactions
    description: Path used to access all or add new transactions
    post:
      summary: Create new transaction
      description: Add a new transaction to the database
      operationId: create_transaction
      parameters:
        - name: envelopeId
          in: path
          description: The id of the envelope.
          required: true
          schema:
            type: integer
      requestBody:
        description: A new transaction object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transaction'
      responses:
        '201':
          content:
            application/json:
              examples:
                Success:
                  value: |-
                    {
                        "message": "Transaction added",
                        "data": {
                            "id": 16,
                            "date": "2022-05-06T04:00:00.000Z",
                            "amount": "$200.00",
                            "recipient": "Jane",
                            "envelope_id": 12
                        }
                    }
          description: Trasaction added successfully
        '400':
          content:
            application/json:
              examples:
                Missing data:
                  value: '{ error: ''More data required'' }'
                Transaction went over budget:
                  value: '{ message: ''You went over budget'' }'
          description: Missing envelope ID, date, amount or recipient
        '500':
          content:
            application/json:
              examples:
                Error Handler:
                  value: '{error: ''An error occurred while adding transaction'' }'
          description: Error response
      tags:
        - Transactions
    get:
      summary: 'Get all transactions '
      description: Get all transactions for the certain category/envelope
      operationId: get_transactions_by_envelope
      parameters:
        - name: envelopeId
          in: path
          description: The id of the envelope.
          required: true
          schema:
            type: integer
      responses:
        '200':
          content:
            application/json:
              examples:
                Success:
                  value: |-
                    [
                        {
                            "id": 1,
                            "date": "2022-05-06T04:00:00.000Z",
                            "amount": "$5.00",
                            "recipient": "Jane",
                            "envelope_id": 12
                        },
                        {
                            "id": 2,
                            "date": "2022-05-06T04:00:00.000Z",
                            "amount": "$2,000.00",
                            "recipient": "Jane",
                            "envelope_id": 12
                        },
                        {
                            "id": 3,
                            "date": "2022-05-06T04:00:00.000Z",
                            "amount": "$200.00",
                            "recipient": "Jane",
                            "envelope_id": 12
                        }
                    ]
          description: Success
        '404':
          content:
            application/json:
              examples:
                Not found:
                  value: '{message: `No transactions for this envelope`}'
          description: No transactions found
        '500':
          content:
            application/json:
              examples:
                Error Handler:
                  value: '{ error: ''An error occurred while fetching transactions'' }'
          description: Error response
      tags:
        - Transactions
  /api/envelopes/{envelopeId}/transactions/{transactionId}:
    summary: Access transaction by id
    description: Access a single transaction
    get:
      summary: Get a single transaction
      description: Get transaction by id
      operationId: get_transaction_by_id
      parameters:
        - name: envelopeId
          in: path
          description: The id of the envelope.
          required: true
          schema:
            type: integer
        - name: transactionId
          in: path
          description: The id of the transaction.
          required: true
          schema:
            type: integer
      responses:
        '200':
          content:
            application/json:
              examples:
                Success:
                  value: |-
                    [
                        {
                            "id": 6,
                            "date": "2022-05-06T04:00:00.000Z",
                            "amount": "$2,000.00",
                            "recipient": "Jane",
                            "envelope_id": 12
                        }
                    ] 
          description: Success
        '400':
          content:
            application/json:
              examples:
                Missing data:
                  value: '{ error: ''Transaction ID is required'' }'
          description: Missing transaction ID
        '404':
          content:
            application/json:
              examples:
                Not found:
                  value: '{message: `Transaction with ID 1 does not exist`}'
          description: Trasaction not found
        '500':
          content:
            application/json:
              examples:
                Error Handler:
                  value: '{ error: ''An error occurred while fetching transaction'' }'
          description: Error response
      tags:
        - Transactions
    put:
      summary: Update a transaction
      description: Update a single transaction by id
      operationId: update_transaction
      parameters:
        - name: envelopeId
          in: path
          description: The id of the envelope.
          required: true
          schema:
            type: integer
        - name: transactionId
          in: path
          description: The id of the transaction.
          required: true
          schema:
            type: integer
      requestBody:
        description: A new transaction object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transaction'
      responses:
        '200':
          content:
            application/json:
              examples:
                Success:
                  value: '{message: `Transaction modified with ID: 1`}'
          description: Success
        '400':
          content:
            application/json:
              examples:
                Missing data:
                  value: '{ error: ''More data required'' }'
                Transaction amount went over budget:
                  value: '{ message: ''You went over budget'' }'
          description: >-
            Missing ID, amount, date, recipient or envelope ID. Or transaction
            amount went over budget
        '500':
          content:
            application/json:
              examples:
                Error Handler:
                  value: '{error: ''An error occurred while adding transaction'' }'
          description: Error response
      tags:
        - Transactions
    delete:
      summary: Delete a transaction
      description: Delete a single transaction by id
      operationId: delete_transaction
      parameters:
        - name: envelopeId
          in: path
          description: The id of the envelope.
          required: true
          schema:
            type: integer
        - name: transactionId
          in: path
          description: The id of the transaction.
          required: true
          schema:
            type: integer
      responses:
        '200':
          content:
            application/json:
              examples:
                Success:
                  value: '{message: `Transaction is deleted with ID: 1`}'
          description:  Transaction was successfully deleted      
        '404':
          content:
            application/json:
              examples:
                Not found:
                  value: '{message:`No transaction found with ID: 1`}'
          description: Transaction was not found        
        '500':
          content:
            application/json:
              examples:
                Error Handler:
                  value: '{error: ''An error occurred while deleting transaction'' }'
          description: Error response
      tags:
        - Transactions
components:
  schemas:
    Envelope:
      type: object
      properties:
        id:
          type: integer
          description: PostgreSQL type "auto-increment"
        name:
          type: string
        amount:
          type: integer
          description: PostgreSQL type "money", i.e. "$200.00"
        budget_id:
          type: integer
      xml:
        name: Envelope
    Budget:
      type: object
      properties:
        id:
          type: integer
        amount:
          type: string
      xml:
        name: Budget
    Transaction:
      type: object
      properties:
        id:
          type: integer
        date:
          type: string
          description: PostgreSQL type "date", i.e. "2024-05-06"
        amount:
          type: integer
          description: PostgreSQL type "money", i.e. "$200.00"
        recipient:
          type: string
        envelopeId:
          type: integer
      xml:
        name: Transaction
